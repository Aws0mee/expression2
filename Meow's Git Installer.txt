@name Meow's Git Installer
@persist [Repo, WantedURL, Root]:string [Queue, Code, FileQueue]:table Index Retries FileRetries

#[ THIS IS THE ONLY THING YOU ARE SUPPOSED TO CHANGE ]#

Repo = "Meowlan/expression2/orbital_refiller"

#[ IF YOU DO NOT KNOW WHAT YOU ARE DOING DONT CHANGE ANYTHING AFTER HERE ]#

function string getFileEnding(Str:string) {
    local R = Str:explode(".")
    return R:popString()
}

function string stripFileEnding(Str:string) {
  return Str:matchFirst("(.+)%..+")
}

if (first() | duped()) {    
    local API = "https://api.github.com/repos/%s/%s/contents/%s"
    local Args = Repo:explode("/")
    Root = Args[3, string]
    
    Retries = 0
    FileRetries = 0
    Index = 0
    Code = table()
    FileQueue = table()
    Queue = table()
    
    WantedURL = format(API, Args[1,string], Args[2,string], Args[3,string])
    
    timer("tryRequest", 100)
} elseif (clk("tryRequest")) {
    if (WantedURL:length() < 1) {
        exit()    
    }
    
    if (httpCanRequest()) {
        httpRequest(WantedURL)
        Retries = 0
    } else {
        timer("tryRequest", 3000)
        Retries++    
    }
    
    if (Retries >= 3) {
        print("Cant request.")
        exit()    
    }
} elseif (clk("trySafe")) {
    if (FileQueue:count() < 1) {
        exit()    
    }
    
    if (fileCanWrite()) {
        local File = FileQueue:popTable()
        fileWrite(File["path", string], File["data", string])
        print(format("Saved %s!", File["path", string]))
        FileRetries = 0
    } else {
        timer("trySafe", 100)
        FileRetries++    
    }
    
    if (FileRetries >= 3) {
        print("Cant safe.")
        exit()    
    }
} elseif (clk("finish")) {
    if (FileQueue:count() > 0) {
        timer("finish", 500)
        exit()    
    }
    print(format("Finished Downloading. Place down \"e2shared/%s/main.txt\" to get started.", Root))
    
    #local Main = Code:removeString(Root+"/main")
    #entity():remoteSetCode(Main, Code)    
    concmd("wire_expression2_reloadeditor")
    selfDestruct()
}

event httpLoaded(Data:string, N:number, Url:string) {
    array(Url, N) # Discards the unsued variable warning bc awsome fucked up _
    
    if (Index == 0) {
        local Json = jsonDecode(Data)
        
        if (Json["message", string] == "Not Found") {
            print("Invalid repo")
            exit()
        }
        
        Queue = Json
        
        foreach(K:number, V:table = Queue) {   
            if (getFileEnding(V["name", string]) != "txt") {    
                Queue:removeTable(K)
            }
        }
        
        print(format("Found %d files to download!", Queue:count()))
        Index++
    } else {
        Code[stripFileEnding(Queue[Index-1, table]["path", string]), string] = Data
        FileQueue:pushTable(table("path" = ">e2shared/"+Queue[Index-1, table]["path", string], "data" = Data:replace("#include \"", "#include \"e2shared/")))
        timer("trySafe", 10)
    }
    
    if (Index <= Queue:count() & Queue:count() > 0) {
        WantedURL = Queue[Index, table]["download_url", string]
        
        print(format("Downloading \"%s\"",  Queue[Index, table]["path", string]))
        
        timer("tryRequest", 250)
        setName(format("Downloading %s: %d/%d", Repo, Index, Queue:count()))
        Index++
    } elseif (Index > Queue:count()) {
        timer("finish", 1000)
    }
}

event httpErrored(S:string, Url:string) {
    array(Url)
    print(S)
}
